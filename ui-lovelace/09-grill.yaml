title: Grill
icon: mdi:grill
cards:
  # - !include .cards/kitchen_timer.yaml

  - type: custom:vertical-stack-in-card
    cards:
      - type: conditional
        conditions:
          - entity: sensor.thermopro_probe_1
            state_not: "-1.0"
        card:
          type: custom:bignumber-card
          entity: sensor.thermopro_probe_1
          title: Probe 1
          style: |
              @keyframes blink {
                50% {
                  {% if states('binary_sensor.thermopro_probe_1_in_range') == "off" %}
                  background: red;
                  {% endif %}
                }
              }
              ha-card {
                {% if states('binary_sensor.thermopro_probe_1_in_range') == "off" %}
                animation: blink 1s linear infinite;
                {% endif %}
              }
      - type: conditional
        conditions:
          - entity: sensor.thermopro_probe_2
            state_not: "-1.0"
        card:
          type: custom:bignumber-card
          entity: sensor.thermopro_probe_2
          title: Probe 2
          style: |
              @keyframes blink {
                50% {
                  {% if states('binary_sensor.thermopro_probe_2_in_range') == "off" %}
                  background: red;
                  {% endif %}
                }
              }
              ha-card {
                {% if states('binary_sensor.thermopro_probe_2_in_range') == "off" %}
                animation: blink 1s linear infinite;
                {% endif %}
              }
      - type: conditional
        conditions:
          - entity: sensor.meater_tip
            state_not: "unknown"
        card:
          type: custom:bignumber-card
          entity: sensor.meater_tip
          title: Meater Tip
          style: |
              @keyframes blink {
                50% {
                  {% if states('binary_sensor.meater_tip_in_range') == "off" %}
                  background: red;
                  {% endif %}
                }
              }
              ha-card {
                {% if states('binary_sensor.meater_tip_in_range') == "off" %}
                animation: blink 1s linear infinite;
                {% endif %}
              }

  - type: entities
    show_header_toggle: false
    title: Low Alert
    entities:
      - input_number.thermopro_probe_1_set_low
      - input_number.thermopro_probe_2_set_low
      - input_number.meater_tip_set_low
  - type: entities
    show_header_toggle: false
    title: High Alert
    entities:
      - input_number.thermopro_probe_1_set_high
      - input_number.thermopro_probe_2_set_high
      - input_number.meater_tip_set_high

  - type: conditional
    conditions:
      - entity: sensor.traeger_temperature
        state_not: "unavailable"
    card:
      type: entities
      title: Traeger
      entities:
        - sensor.traeger_temperature
        - sensor.traeger_hopper_level
        - automation.hopper_level_alert
        #- sensor.traeger_hopper_level_raw

  - type: conditional
    conditions:
      - entity: sensor.meater_ambient
        state_not: "unknown"
    card:
      type: entities
      title: Meater Ambient
      entities:
        - sensor.meater_ambient

  - type: custom:vertical-stack-in-card
    cards:
      - type: entities
        entities:
          - entity: sensor.thermopro_probe_1_high_estimated_length
            name: Probe 1 Time Remaining
            icon: 'mdi:clock'
          - entity: sensor.thermopro_probe_2_high_estimated_length
            name: Probe 2 Time Remaining
            icon: 'mdi:clock'
          - entity: sensor.meater_tip_high_estimated_length
            name: Meater Time Remaining
            icon: 'mdi:clock'
          - sensor.sensor_thermopro_probe_1_derivative
          - sensor.sensor_thermopro_probe_2_derivative
          - sensor.sensor_meater_tip_derivative

      - type: conditional
        conditions:
          - entity: sensor.thermopro_probe_1
            state_not: "-1.0"
        card:
          type: markdown
          content: |
            Probe 1 @ {{ state_attr('sensor.thermopro_probe_1_high_estimated_length','timestamp') | as_timestamp | timestamp_custom("%I:%M %p", "Error") }}

      - type: conditional
        conditions:
          - entity: sensor.thermopro_probe_2
            state_not: "-1.0"
        card:
          type: markdown
          content: |
            Probe 2 @ {{ state_attr('sensor.thermopro_probe_2_high_estimated_length','timestamp') | as_timestamp | timestamp_custom("%I:%M %p", "Error") }}

      - type: conditional
        conditions:
          - entity: sensor.meater_tip
            state_not: "unknown"
        card:
          type: markdown
          content: |
            Meater Tip @ {{ state_attr('sensor.meater_tip_high_estimated_length','timestamp') | as_timestamp | timestamp_custom("%I:%M %p", "Error") }}


