#Workaround for fan speed on appdaemon dashboard
#Set value of input select when fan speed changed on switch
- alias: Set Master Bedroom Ceiling Fan Speed Selector
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: fan.master_bedroom_ceiling_fan_level
  action:
     service: input_select.select_option
     data_template:
       entity_id: input_select.master_bedroom_ceiling_fan_speed
       option: '{{ states.fan.master_bedroom_ceiling_fan_level.attributes.speed }}'

#Workaround for fan speed on appdaemon dashboard
#Set fan speed when input changed
- alias: Set Master Bedroom Ceiling Fan Speed
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.master_bedroom_ceiling_fan_speed
  action:
     service: fan.set_speed
     entity_id: fan.master_bedroom_ceiling_fan_level
     data_template:
       speed: '{{ states.input_select.master_bedroom_ceiling_fan_speed.state }}'

- alias: "Set dark theme"
  initial_state: on
  trigger:
    - platform: time
      at: '21:00:00'
    - platform: homeassistant
      event: start
  condition:
    condition: time
    after: '20:59:00'
    before: '08:59:00'
  action:
    service: frontend.set_theme
    data:
      name: midnight-remake

- alias: "Set light theme for day"
  initial_state: on
  trigger:
    - platform: time
      at: '09:00'
    - platform: homeassistant
      event: start
  condition:
    condition: time
    after: '08:59:00'
    before: '20:59:00'
  action:
    service: frontend.set_theme
    data:
        name: default

- alias: "Package Delivered"
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.deliveries_today
  action:
    - service: notify.pushover
      data_template:
        message: >
          Package delivered...

- alias: "Front Door Open Length"
  initial_state: on
  trigger:
    platform: state
    to: 'on'
    entity_id: binary_sensor.front_door
    for:
      minutes: 1
  action:
    - service: notify.pushover
      data_template:
        message: >
          The front door has been opened for 1 minute..

- alias: "Back Door Open Length"
  initial_state: on
  trigger:
    platform: state
    to: 'on'
    entity_id: binary_sensor.back_door
    for:
      minutes: 1
  action:
    - service: notify.pushover
      data_template:
        message: >
          The back door has been opened for 1 minute..

#Switch
- alias: "Arlo Arm"
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_boolean.arlo_status
    from: 'off'
    to: 'on'
  condition:
    condition: state
    entity_id: input_boolean.security_camera_automation
    state: 'on'
  action:
    service: script.turn_on
    entity_id: script.arlo_arm

#Switch
- alias: "Arlo Disarm"
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_boolean.arlo_status
    from: 'on'
    to: 'off'
  condition:
    condition: state
    entity_id: input_boolean.security_camera_automation
    state: 'on'
  action:
    service: script.turn_on
    entity_id: script.arlo_disarm

- alias: "Turn off House"
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: group.trackers
    to: not_home
    for:
      seconds: 5
  action:
    service: homeassistant.turn_on
    entity_id: script.home_empty

- alias: "Arrived at Home"
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: group.trackers
    to: home
  action:
    service: homeassistant.turn_on
    entity_id: script.home_occupied

- alias: "Desk Button Press"
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.andrew_desk_button
    to: 'on'
  action:
    service: homeassistant.toggle
    entity_id: light.bethany_desk_lamp

- alias: "Mount /Plex"
  initial_state: on
  trigger:
    platform: state
    entity_id: switch.nas
    from: 'off'
    to: 'on'
    for:
      seconds: 60
  action:
    service: shell_command.mount_plex

- alias: "Unmount /Plex"
  initial_state: on
  trigger:
    platform: state
    entity_id: switch.nas
    from: 'on'
    to: 'off'
    for:
      seconds: 120
  action:
    service: shell_command.umount_plex

#- id: ac_broken_cool
- alias: "Notify Andrew when AC BREAKS"
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: sensor.thermostat_setpoint
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: climate.thermostat
        state: 'cool'
      - condition: numeric_state
        entity_id: sensor.thermostat_setpoint
        below: '68'
  action:
    - service: notify.pushover
      data_template:
        message: AC Broke.. Turning Off...
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.thermostat
        operation_mode: 'off'

#- id: ac_broken_heat
- alias: "Notify Andrew when AC BREAKS"
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: sensor.thermostat_setpoint
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: climate.thermostat
        state: 'heat'
      - condition: numeric_state
        entity_id: sensor.thermostat_setpoint
        above: '72'
  action:
    - service: notify.pushover
      data_template:
        message: AC Broke.. Turning Off...
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.thermostat
        operation_mode: 'off'

#- id: ac_setpoint_change
- alias: "Notify Andrew when AC setpoint changes"
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: sensor.thermostat_setpoint
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.ac_change_notification
        state: 'on'
      - condition: template
        value_template: '{{ trigger.entity_id != None }}'
      - condition: template
        value_template: '{{ trigger.from_state.state != trigger.to_state.state }}'
  action:
    - service: notify.pushover
      data_template:
        message: >
          Setpoint Trigger: {{ trigger.to_state.state }}. Mode: {{ states.sensor.thermostat_operating_mode.state }}

#- id: ac_mode_change
- alias: "Notify Andrew when AC Mode changes"
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: sensor.thermostat_operating_mode
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.ac_change_notification
        state: 'on'
      - condition: template
        value_template: '{{ trigger.entity_id != None }}'
      - condition: template
        value_template: '{{ trigger.from_state.state != trigger.to_state.state }}'
  action:
    - service: notify.pushover
      data_template:
        message: >
          Mode Trigger: {{ states.sensor.thermostat_setpoint.state }}. Mode: {{ trigger.to_state.state }}

- alias: "Seventeentrack Update"
  initial_state: 'on'
  trigger:
    platform: event
    event_type: state_changed
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ trigger.event.data.entity_id.startswith('sensor.seventeentrack_package_') }}"
      - condition: or
        conditions:
        - condition: template
          value_template: "{{ 'TX' in trigger.event.data.new_state.attributes.info_text }}"
        - condition: template
          value_template: "{{ 'Out for Delivery' in trigger.event.data.new_state.attributes.info_text }}"
        - condition: template
          value_template: "{{ 'Delivered' in trigger.event.data.new_state.attributes.info_text }}"
  action:
    service: notify.pushover
    data_template:
      message: >
        {{ trigger.event.data.new_state.attributes.friendly_name | replace("Seventeentrack Package: ","") }}: {{ trigger.event.data.new_state.attributes.info_text }}

- alias: "Garden Timer Problem"
  initial_state: 'on'
  trigger:
    - platform: time
      at: '05:30:00'
  condition:
    condition: numeric_state
    entity_id: sensor.miflora_moisture
    below: 70
  action:
    service: notify.pushover
    data_template:
      message: >
        Garden sensor reports a moisture level of {{ states.sensor.miflora_moisture.state }}%. Check hose timer. 

# Test data for html5 push notification acton
#{
#   "message": "Welcome home",
#   "target": "Phone",
#   "data": {
#      "actions": [
#         {
#            "action": "action_1",
#            "title": "Lamp Toggle"
#         }
#      ]
#   }
#}
- alias: HTML5 push notification action button clicked
  trigger:
    platform: event
    event_type: html5_notification.clicked
    event_data:
      action: action_1
  action:
    service: homeassistant.toggle
    entity_id: light.bethany_desk_lamp

- alias: Ensure 100% brightness for Andrew Backlight
  trigger:
    platform: state
    to: 'on'
    entity_id: light.andrew_monitor_backlight
  action:
    service: scene.turn_on
    entity_id: scene.monitor_backlight_full

####################
# Mom and Dad Gate #
####################

- alias: "Webhook Trigger"
  initial_state: 'on'
  trigger:
    platform: webhook
    webhook_id: !secret gate_webhook_id
  action:
    service: script.turn_on
    entity_id: script.mom_and_dad_gate_toggle
