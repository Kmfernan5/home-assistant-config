- alias: "Update README"
  initial_state: on
  trigger:
    - platform: time
      at: "11:00:00"
    - platform: time
      at: "21:00:00"
    - platform: homeassistant
      event: start
  action:
    - delay: "00:05:00"
    - service: readme.generate

- alias: "Set dark theme for night"
  initial_state: on
  trigger:
    - platform: time
      at: "21:00:00"
    - platform: homeassistant
      event: start
  condition:
    condition: time
    after: "20:59:00"
    before: "08:59:00"
  action:
    - service: frontend.set_theme
      data:
        name: "Google Dark Theme"

- alias: "Set light theme for day"
  initial_state: on
  trigger:
    - platform: time
      at: "08:00"
    - platform: homeassistant
      event: start
  condition:
    condition: time
    after: "07:59:00"
    before: "20:59:00"
  action:
    service: frontend.set_theme
    data:
        name: default

- alias: "Remove new devices notification"
  trigger:
    - platform: state
      entity_id: persistent_notification.config_entry_discovery
      to: notifying
    - platform: homeassistant
      event: start
  action:
    - service: persistent_notification.dismiss
      data:
        notification_id: config_entry_discovery

- alias: "Security Arm/Disarm"
  initial_state: "on"
  trigger:
    platform: state
    entity_id: input_boolean.security_status
  action:
    - service: script.turn_on
      data:
        entity_id: >
          {% if trigger.to_state.state == 'on' %}
            script.security_arm
          {% elif trigger.to_state.state == 'off' %}
            script.security_disarm
          {% endif %}

- alias: "House Occupied/Empty"
  initial_state: "on"
  trigger:
    - platform: state
      entity_id: group.trackers
      to: not_home
      for:
        seconds: 5
    - platform: state
      entity_id: group.trackers
      to: home
  condition:
    condition: state
    entity_id: input_boolean.guest_mode
    state: "off"
  action:
    - service: script.turn_on
      data: 
        entity_id: >
          {% if trigger.to_state.state == 'home' %}
            script.home_occupied
          {% elif trigger.to_state.state == 'not_home' %}
            script.home_empty
          {% endif %}
    # Prevent trigger for 5 minutes
    - delay: "00:05:00"

- alias: "Andrew Desk Button"
  initial_state: "on"
  trigger:
    platform: state
    to: "on"
    entity_id: 
      - binary_sensor.andrew_desk_button_single
      - binary_sensor.andrew_desk_button_double
      - binary_sensor.andrew_desk_button_triple
  action:
    service: homeassistant.toggle
    data: 
      entity_id: >
        {% if 'single' in trigger.entity_id %}
          switch.office_ceiling_fan
        {% elif 'double' in trigger.entity_id %}
          light.andrew_desk_lamp
        {% elif 'triple' in trigger.entity_id %}
          light.aquarium_white_light
        {% endif %}

- alias: "Mount/Umount /Plex"
  initial_state: on
  trigger:
    - platform: state
      entity_id: switch.nas
      from: "off"
      to: "on"
      for:
        seconds: 30
    - platform: state
      entity_id: switch.nas
      from: "on"
      to: "off"
      for:
        seconds: 30
  action:
    service: >
      {% if trigger.to_state.state == 'on' %}
        shell_command.mount_plex
      {% elif trigger.to_state.state == 'off' %}
        shell_command.umount_plex
      {% endif %}

- alias: "Notify when AC Offline"
  initial_state: "on"
  trigger:
    - platform: state
      entity_id: binary_sensor.thermostat_online
      to: "off"
  action:
    - service: notify.pushover
      data:
        message: "The thermostat appears to be offline.."

- alias: "Notify when AC BREAKS"
  initial_state: "on"
  trigger:
    - platform: state
      entity_id: sensor.thermostat_setpoint
  condition:
    condition: or
    conditions:
      - "{{ (states('sensor.thermostat_setpoint') | int > 70) and (states('sensor.thermostat_operating_mode') == 'heat') }}"
      - "{{ (states('sensor.thermostat_setpoint') | int < 68) and (states('sensor.thermostat_operating_mode') == 'cool') }}"
  action:
    # Push actionable HTML5 notification to allow timely shutoff
    - service: notify.html5
      data:
        message: "AC Exception. Mode: {{ states('sensor.thermostat_operating_mode') }} Setpoint: {{ states('sensor.thermostat_setpoint') }}"
        data:
          actions:
            - action: turn_ac_off
              title: Set AC mode to off

- alias: "Notify when AC setting changes"
  initial_state: "on"
  trigger:
    - platform: state
      entity_id: sensor.thermostat_setpoint
    - platform: state
      entity_id: sensor.thermostat_operating_mode
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.ac_change_notification
        state: "on"
      - "{{ trigger.from_state.state != trigger.to_state.state }}"
  action:
    - service: notify.pushover
      data:
        message: "{% if trigger.entity_id == 'sensor.thermostat_setpoint' %}Setpoint{% elif trigger.entity_id == 'sensor.thermostat_mode' %}Mode{% endif %}: {{ states('sensor.thermostat_setpoint') }}. Mode: {{ states('sensor.thermostat_operating_mode') }}"

# Working as of 2/12/2020
# Handle all actions for html5 and android push notifications
- alias: HTML5 or Android push notification action button clicked
  trigger:
    - platform: event
      event_type: html5_notification.clicked
    - platform: event
      event_type: mobile_app_notification_action
  action:
    service: >
      {% if trigger.event.data.action == 'turn_ac_off' %}
        script.turn_ac_off
      {% endif %}

- alias: Clear Alexa Recording History
  trigger:
    platform: time
    at: "22:00:00"
  action:
    - service: alexa_media.clear_history

- alias: "Update door last opened"
  trigger:
    - platform: state
      entity_id: 
        - binary_sensor.front_door
        - binary_sensor.back_porch_door
        - binary_sensor.garage_exterior_door
        - binary_sensor.garage_interior_door
        - binary_sensor.master_bedroom_exterior_door
      from: "off"
      to: "on"
  action:
    service: input_datetime.set_datetime
    data:
      entity_id: "input_datetime.{{trigger.entity_id | regex_replace(find='binary_sensor.', replace='') }}_last"
      datetime: "{{ now().strftime('%Y-%m-%d %H:%M:%S') }}"

# Blink a light when the panic pushover alert is acknowledged
- alias: "Panic Script Webhook Trigger"
  initial_state: "on"
  trigger:
    platform: webhook
    webhook_id: !secret panic_script_webhook
  action:
    - service: homeassistant.toggle
      entity_id: switch.master_bathroom_light_switch
    - delay: "00:00:01"
    - service: switch.toggle
      entity_id: switch.master_bathroom_light_switch

- alias: "Pull Recipes Github Webhook"
  initial_state: "on"
  trigger:
    platform: webhook
    webhook_id: !secret github_recipes_webhook
  action:
    - service: shell_command.pull_recipes

- alias: "Power off NAS after backup"
  initial_state: "on"
  trigger:
    platform: state
    entity_id: binary_sensor.backups_complete
    to: "on"
  condition:
    condition: time
    after: "03:00:00"
    before: "05:00:00"
    weekday:
      - wed
  action:
    service: homeassistant.turn_off
    entity_id: 
      - switch.nas
      - binary_sensor.backups_complete

- alias: "Turn on office speakers when spotify begins playing including this source"
  initial_state: "on"
  trigger:
    - platform: state
      entity_id: media_player.spotify
      attribute: source
      to: "Office"
    - platform: state
      entity_id: media_player.spotify
      attribute: source
      to: "Everywhere"
    - platform: state
      entity_id: media_player.spotify
      to: "playing"
  condition: "{{ states('media_player.spotify') == 'playing' and states('switch.andrew_office_speakers') == 'off' and state_attr('media_player.spotify', 'source') in ['Everywhere', 'Office'] }}"
  action:
    - service: homeassistant.turn_on
      entity_id: switch.andrew_office_speakers

- alias: "Turn on speakers and tv when XBOX powers on"
  trigger:
    platform: state
    entity_id: binary_sensor.xbox_power
    to: "on"
  action:
    service: homeassistant.turn_on
    entity_id: 
      - switch.living_room_speakers
      - switch.tv
      
- alias: "Turn off speakers when tv OR xbox powers off"
  trigger:
    - platform: state
      entity_id: switch.tv
      to: "off"
    - platform: state
      entity_id: binary_sensor.xbox_power
      to: "off"
  action:
    service: homeassistant.turn_off
    entity_id: 
      - switch.living_room_speakers
      - switch.tv

- alias: "Desk Lamp off when MacBook Inactive"
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.andrew_macbook_active
    to: "off"
    for: "00:10:00"
  condition: "{{ states('light.andrew_desk_lamp') == 'on' }}"
  action:
    - service: homeassistant.turn_off
      entity_id: light.andrew_desk_lamp

- alias: "Desk Lamp on when MacBook Active"
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.andrew_macbook_active
    to: "on"
  condition: "{{ states('light.andrew_desk_lamp') == 'off' and (now().hour >= 5 and now().hour <= 22) }}"
  action:
    - service: homeassistant.turn_on
      entity_id: light.andrew_desk_lamp

- alias: "Water Sensor Alerts"
  trigger:
    - platform: state
      entity_id: 
        - binary_sensor.washing_machine_water_detector  
        - binary_sensor.water_heater_water_detector  
      to: "on"
      for: "00:00:05"
  action:
    - service: notify.pushover
      data:
        message: >
          {% if trigger.entity_id == 'binary_sensor.washing_machine_water_detector' %}
            Water detected under washing machine!
          {% elif trigger.entity_id == 'binary_sensor.water_heater_water_detector' %}
            Water detected under water heater!
          {% endif %}
        data:
          priority: 2
          expire: 3600
          retry: 30

- alias: "Master Closet Light with Motion"
  trigger:
    - platform: state
      entity_id: "binary_sensor.master_closet_motion_sensor"
      to: "on"
  mode: restart
  action:
    - service: homeassistant.turn_on
      entity_id: switch.master_closet_light
    - delay: "00:05:00"
    - service: homeassistant.turn_off
      entity_id: switch.master_closet_light

- alias: "Aquarium Light"
  trigger:
    # Double Off
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.office_ceiling_fan
        scene_id: 2
        scene_data: 7860
    # Double On
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.office_ceiling_fan
        scene_id: 1
        scene_data: 7860
  action:
    - service: >
        {% if trigger.event.data.scene_id == 1 %}
          homeassistant.turn_on
        {% elif trigger.event.data.scene_id == 2 %}
          homeassistant.turn_off
        {% endif %}
      entity_id: light.aquarium_white_light

- alias: "Sensor Battery Alerts"
  trigger:
    - platform: numeric_state
      entity_id: 
        - sensor.washing_machine_water_detector_battery_level
        - sensor.water_heater_water_detector_battery_level
        - sensor.smoke_detector_hallway_battery_level
        - sensor.smoke_detector_kitchen_battery_level
      below: 10
  action:
    - service: notify.pushover
      data:
        message: >
          {% if trigger.entity_id == 'sensor.washing_machine_water_detector_battery_level' %}
            Washing machine water detector battery level at {{ trigger.to_state.state }}
          {% elif trigger.entity_id == 'sensor.water_heater_water_detector_battery_level' %}
            Water heater water detector battery level at {{ trigger.to_state.state }}
          {% endif %}

- alias: "Wifi too slow"
  trigger:
    - platform: numeric_state
      entity_id: sensor.home_wifi_speedtest
      value_template: "{{ state.attributes.download }}"
      below: 100
  action:
    - service: notify.pushover
      data:
        message: >
            Wifi speed measured at {{ trigger.to_state.attributes.download }}

- alias: "Smoke Alarm Detection"
  initial_state: 'on'
  trigger:
    platform: state
    entity_id:
      - binary_sensor.smoke_detector_hallway_carbon_monoxide_detected
      - binary_sensor.smoke_detector_hallway_smoke_detected
      - binary_sensor.smoke_detector_hallway_test
      - binary_sensor.smoke_detector_kitchen_carbon_monoxide_detected
      - binary_sensor.smoke_detector_kitchen_smoke_detected
      - binary_sensor.smoke_detector_kitchen_test
    from: "off"
    to: "on"
  action:
    - service: notify.pushover
      data:
        message: >
            {{ trigger.from_state.attributes.friendly_name }} {{ trigger.to_state.state }}
        data:
          priority: 2
          expire: 3600
          retry: 30
