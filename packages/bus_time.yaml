homeassistant:
  customize:
    sensor.next_bus_home:
      friendly_name: Home
    sensor.next_bus_work:
      friendly_name: Work
    sensor.next_bus_home_string:
      icon: mdi:bus
    sensor.next_bus_work_tring:
      icon: mdi:bus

sensor:
- platform: bus_times

- platform: template
  sensors:
    next_bus_home_string:
      friendly_name: "Next Bus Arriving at Home"
      entity_id: sensor.rack_exhaust_heat_index
      value_template: >-
        {% if not states('sensor.next_bus_home') == "Check back tomorrow" %}
            {%- set time = as_timestamp(states('sensor.next_bus_home')) - as_timestamp(now()) | int %}
            {%- set minutes = (time / 60) | int %}
            {%- set seconds = (time - (minutes*60)) | int %}
            {% if minutes < 0 -%}
                {{ minutes | string | replace("-","") }} minutes and {{ seconds | string | replace("-","")}} seconds ago
            {% else %}
                {{ minutes | string }} minutes and {{ seconds | string }} seconds
            {% endif %}
        {% else %}
            {{ states('sensor.next_bus_home') }}
        {% endif %}
    next_bus_work_string:
      friendly_name: "Next Bus Arriving at Work"
      entity_id: sensor.rack_exhaust_heat_index
      value_template: >-
        {% if not states('sensor.next_bus_work') == "Check back tomorrow" %}
            {%- set time = as_timestamp(states('sensor.next_bus_work')) - as_timestamp(now()) | int %}
            {%- set minutes = (time / 60) | int %}
            {%- set seconds = (time - (minutes*60)) | int %}
            {% if minutes < 0 -%}
                {{ minutes | string | replace("-","") }} minutes and {{ seconds | string | replace("-","")}} seconds ago
            {% else %}
                {{ minutes | string }} minutes and {{ seconds | string }} seconds
            {% endif %}
        {% else %}
            {{ states('sensor.next_bus_work') }}
        {% endif %}

input_boolean:
  bus_commute:
    name: Bus Commute
    icon: mdi:bus

script:
  bus_times_notify:
    sequence:
      - service: notify.pushover
        data:
          message: "Home: {{ states('sensor.next_bus_home') }}

Work: {{ states('sensor.next_bus_work') }}"
