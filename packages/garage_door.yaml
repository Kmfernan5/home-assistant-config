automation:
  - alias: "Update cover last opened"
    id: "update_cover_last_opened"
    trigger:
      - platform: state
        entity_id: 
          - cover.garage_door
        from: "closed"
        to: "open"
    action:
      service: input_datetime.set_datetime
      data:
        entity_id: "input_datetime.{{trigger.entity_id | regex_replace(find='cover.', replace='') }}_last"
        datetime: "{{ now().strftime('%Y-%m-%d %H:%M:%S') }}"

  - alias: "Garage Exterior Switch Scenes"
    id: "garage_exterior_scenes"
    trigger:
      - platform: event
        event_type: zwave_js_value_notification
        event_data:
          node_id: 39
          # Double tap up
          value: 3
    action:
      - service: homeassistant.turn_on
        entity_id: switch.garage_lights

  - alias: "Turn off Garage Lights"
    id: "garge_lights_off"
    trigger:
      platform: state
      entity_id: binary_sensor.garage_interior_motion
      from: "on"
      to: "off"
      for: "00:05:00"
    condition: "{{ states('switch.garage_lights') == 'on' }}"
    action:
      service: homeassistant.turn_off
      entity_id: switch.garage_lights

  - alias: "Turn on garage light when motor light switches"
    id: "garage_laser_trip"
    trigger:
      - platform: state
        entity_id: binary_sensor.garage_motor_light_status
        from: "off"
        to: "on"
    condition:
      - condition: state
        entity_id: switch.garage_lights
        state: "off"
    action:
      service: light.turn_on
      entity_id: switch.garage_lights

  - alias: 'Change entry switch LEDs based on garage door state'
    id: "garage_opened_switch_leds"
    trigger:
      - platform: state
        entity_id: cover.garage_door
        from: 'closed'
        to: 'open'
    action:
      - repeat:
          sequence:
            # Run command that for some reason doesn't always work
            - service: script.zen30_led_color_change
              data:
                color: 'Red'
            # Give it time to complete
            - delay:
                seconds: 2
          until:
            - condition: state
              entity_id: cover.garage_door
              state: 'closed'
      - delay: "00:00:05"
      - service: script.zen30_led_color_change
        data:
          color: 'Green'

  - alias: "Garage still open reminder night"
    id: "garage_night_reminder"
    trigger:
      - platform: event
        event_type: script_started
        event_data:
          entity_id: script.master_bedroom_bedtime
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: cover.garage_door
          state: 'open'
        - condition: state
          entity_id: person.andrew
          state: 'home'    
    action:
      - service: notify.alexa_media_master
        data:
          data:
            type: tts
          message: "The garage door is still open. You can say 'Alexa, close the garage door.'"
  
  - alias: "Garage door still opened when no one home"
    id: "garage_open_noone_home"
    trigger:
      - platform: state
        entity_id: group.trackers
        to: not_home
    condition:
      - condition: state
        entity_id: cover.garage_door
        state: 'open'
    action:
      - service: notify.mobile_app_andrew_phone
        data:
          message: "No one home, close garage door?"
          data:
            persistent: true # Set to true to create a persistent notification
            tag: persistent # Tag is required for the persistent notification
            actions:
              - action: "confirm_close_garage"
                title: "Confirm"
              - action: "ignore_close_garage"
                title: "Ignore"

  - alias: "Close garage after confirmation"
    id: "garage_confirmation"
      # Android
    trigger:
      - platform: event
        event_type: mobile_app_notification_action 
        event_data:
          action: confirm_close_garage
    action:
      service: cover.close_cover
      entity_id: cover.garage_door

  - alias: "Garage changed to open when no one home"
    id: "garage_opened_noone_home"
    trigger:
      - platform: state
        entity_id: cover.garage_door
        to: "open"
    condition:
      condition: state
      entity_id: group.trackers
      state: 'not_home'
    action:
      - service: notify.pushover
        data:
          message: "Garage door opened and no one home.."

script:
  zen30_led_color_change:
    sequence:
      # Entryway
      - service: zwave_js.set_config_parameter
        target:
          entity_id: light.entryway_light
        data:
          parameter: LED Indicator Color for Dimmer
          value: '{{ color }}'
      - service: zwave_js.set_config_parameter
        target:
          entity_id: light.entryway_light
        data:
          parameter: LED Indicator Color for Relay
          value: '{{ color }}'

      # Kitchen Sink
      - service: zwave_js.set_config_parameter
        target:
          entity_id: light.kitchen_sink_light
        data:
          parameter: LED Indicator Color for Dimmer
          value: '{{ color }}'
      - service: zwave_js.set_config_parameter
        target:
          entity_id: light.kitchen_sink_light
        data:
          parameter: LED Indicator Color for Relay
          value: '{{ color }}'

      # Entryway
      - service: zwave_js.set_config_parameter
        target:
          entity_id: light.master_bedroom_ceiling_fan
        data:
          parameter: LED Indicator Color for Dimmer
          value: '{{ color }}'
      - service: zwave_js.set_config_parameter
        target:
          entity_id: light.master_bedroom_ceiling_fan
        data:
          parameter: LED Indicator Color for Relay
          value: '{{ color }}'

      # Bethany's Office
      - service: zwave_js.set_config_parameter
        target:
          entity_id: light.bethany_office_ceiling_fan
        data:
          parameter: LED Indicator Color for Dimmer
          value: '{{ color }}'
      - service: zwave_js.set_config_parameter
        target:
          entity_id: light.bethany_office_ceiling_fan
        data:
          parameter: LED Indicator Color for Relay
          value: '{{ color }}'
