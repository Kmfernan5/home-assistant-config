automation:
  - alias: Frigate Notification Person
    id: "frigate_notification_person"
    mode: single
    trigger:
      - platform: mqtt
        topic: frigate/events
        payload: new
        value_template: "{{ value_json.type }}"
        id: new
      - platform: mqtt
        topic: frigate/events
        payload: end
        value_template: "{{ value_json.type }}"
        id: end
    condition: "{{ trigger.payload_json['after']['label'] == 'person' }}"
    action:
      - choose:
          - conditions: "{{ trigger.id == 'end' }}"
            sequence:
              - service: shell_command.frigate_clips_drive
                data:
                  clip_id: "{{trigger.payload_json['after']['id']}}"

          - conditions: "{{ trigger.id == 'new' }}"
            sequence:
              # if home and person detection front door then notify
              - if: "{{ is_state('input_boolean.security_status', 'off') and trigger.payload_json['after']['camera'] == 'front_door' }}"
                then:
                  - if: "{{ is_state('binary_sensor.weasel_active', 'on') }}"
                    then:
                      - service: shell_command.weasel_shortcut
                        data:
                          shortcut: open-front-door-cam-weasel
                  - service: notify.signal_frigate
                    data:
                      message: >-
                        A {{trigger.payload_json["after"]["label"]}} was detected.


                        Clip: https://secret/api/frigate/notifications/{{trigger.payload_json["after"]["id"]}}/clip.mp4


                        Stream: https://secret/api/camera_proxy_stream/camera.{{trigger.payload_json['after']['camera'].lower()}}?token={{state_attr( 'camera.' ~ trigger.payload_json['after']['camera'].lower(), 'access_token')}}
                      data:
                        urls:
                          - http://localhost:8123/api/frigate/notifications/{{trigger.payload_json["after"]["id"]}}/snapshot.jpg?bbox=1&timestamp=1&quality=100

              # if not home or sleeping time and person detection anywhere then notify
              - if: "{{ is_state('input_boolean.security_status', 'on') or is_state('input_boolean.goodnight', 'on') }}"
                then:
                  - service: notify.signal_frigate
                    data:
                      message: >-
                        A {{trigger.payload_json["after"]["label"]}} was detected.


                        Clip: https://secret/api/frigate/notifications/{{trigger.payload_json["after"]["id"]}}/clip.mp4


                        Stream: https://secret/api/camera_proxy_stream/camera.{{trigger.payload_json['after']['camera'].lower()}}?token={{state_attr( 'camera.' ~ trigger.payload_json['after']['camera'].lower(), 'access_token')}}
                      data:
                        urls:
                          - http://localhost:8123/api/frigate/notifications/{{trigger.payload_json["after"]["id"]}}/snapshot.jpg?bbox=1&timestamp=1&quality=100

  - alias: Frigate Notification USPS
    id: "frigate_notification_usps"
    mode: single
    trigger:
      - platform: mqtt
        topic: frigate/events
        payload: update
        value_template: "{{ value_json.type }}"
      - platform: mqtt
        topic: frigate/events
        payload: end
        value_template: "{{ value_json.type }}"
    condition: "{{ 'usps' in  trigger.payload_json['after']['sub_label'] }}" # Frigate 13 beta
    action:
      - service: input_datetime.set_datetime
        data:
          entity_id: "input_datetime.usps_last"
          time: "{{ ((as_timestamp(now())) | timestamp_custom('%H:%M:%S', true)) }}"
          date: "{{ (as_timestamp(now()) | timestamp_custom('%Y-%m-%d', true)) }}"
      - service: notify.signal_self
        data:
          message: "USPS detected"
          data:
            attachments:
              - /config/images/logo.jpg
      # No need for container to run after detection made, appdaemon will turn on in the morning
      # - service: switch.turn_off
      #   entity_id: switch.docker_codeproject
      - delay: "00:02:00"

  - alias: Doorbell Ring
    id: "frigate_doorbell_ring"
    mode: single
    trigger:
      - platform: state
        entity_id: binary_sensor.front_door_button_pressed
        to: "on"
    action:
      - service: camera.snapshot
        data:
          filename: /tmp/doorbell.jpg
        target:
          entity_id: camera.front_door
      - service: notify.signal_frigate
        data:
          message: >-
            Doorbell ring!

            Talk Live (you'll have to unmute audio, mic always live!): https://frigate.secret/live/webrtc/webrtc.html?src=front_door_twoway
          data:
            attachments:
              - /tmp/doorbell.jpg
      - if: "{{ is_state('binary_sensor.weasel_active', 'on') }}"
        then:
          - service: shell_command.weasel_shortcut
            data:
              shortcut: open-front-door-cam-weasel
      - service: siren.toggle
        entity_id: siren.garage_chime_siren

  - alias: Frigate Notification Snooze
    id: "frigate_notification_snooze"
    mode: single
    trigger:
      - platform: event
        id: start
        event_type:
          - timer.started
          - timer.restarted
        event_data:
          entity_id: timer.frigate_notification_snooze
      - platform: event
        id: finish
        event_type: timer.finished
        event_data:
          entity_id: timer.frigate_notification_snooze
      - platform: state
        entity_id: automation.frigate_notification_person
        to:
          - "on"
          - "off"
        id: manual
    action:
      - if: "{{ trigger.id == 'start' }}"
        then:
          - service: homeassistant.turn_off
            entity_id: automation.frigate_notification_person
          - delay: "00:00:01"

      - if: "{{ trigger.id == 'finish' }}"
        then:
          - service: homeassistant.turn_on
            entity_id: automation.frigate_notification_person
          - service: timer.cancel
            entity_id: timer.frigate_notification_snooze
          - delay: "00:00:01"

      - if: "{{ trigger.id == 'manual' }}"
        then:
          - service: timer.cancel
            entity_id: timer.frigate_notification_snooze

  - alias: Frigate Notification Snooze Door
    id: "frigate_notification_snooze_door"
    mode: single
    trigger:
      - platform: state
        id: front_door
        entity_id: binary_sensor.front_door
        to: "on"
      - platform: event
        id: unlock
        event_type: call_service
        event_data:
          domain: lock
          service: unlock
          service_data:
            entity_id: lock.front_door
    action:
      - if: "{{ trigger.id == 'front_door' and is_state('group.trackers', 'home') and is_state('automation.frigate_notification_person', 'on') }}"
        then:
          - service: timer.start
            data:
              duration: "00:05:00"
            target:
              entity_id: timer.frigate_notification_snooze

      - if: "{{ trigger.id == 'unlock' }}"
        then:
          - service: timer.start
            data:
              duration: "00:02:00"
            target:
              entity_id: timer.frigate_notification_snooze

  - alias: Front Door Security Light
    id: "frigate_front_door_security_light"
    mode: single
    trigger:
      - platform: state
        entity_id: binary_sensor.front_door_person_occupancy
    condition: "{{ is_state('sun.sun', 'below_horizon')}}"
    action:
      - service: select.select_option
        data:
          option: "{% if trigger.to_state.state == 'on' %}On{% elif trigger.to_state.state == 'off' %}Off{% endif %}"
        target:
          entity_id: select.front_door_security_light

command_line:
  - switch:
      name: Back Porch Camera White Light
      command_on: >
        curl --silent --digest -g "http://USERNAME:PASSWORD@10.0.0.32/cgi-bin/coaxialControlIO.cgi?action=control&channel=1&info[0].Type=1&info[0].IO=1"
      command_off: >
        curl --silent --digest -g "http://USERNAME:PASSWORD@10.0.0.32/cgi-bin/coaxialControlIO.cgi?action=control&channel=1&info[0].Type=1&info[0].IO=0"
      command_state: >
        curl --silent --digest -g "http://USERNAME:PASSWORD@10.0.0.32/cgi-bin/coaxialControlIO.cgi?action=getStatus&channel=0" | grep -q "status.status.WhiteLight=On"

input_datetime:
  usps_last:
    name: Last USPS Detection
    has_date: true
    has_time: true

shell_command:
  frigate_clips_drive: /config/scripts/frigate_clips_drive.sh {{ clip_id }}

timer:
  frigate_notification_snooze:
    duration: "00:00:00"
    restore: True

media_player:
  - platform: webrtc
    name: Doorbell
    stream: front_door_twoway
    audio: pcma

# Eg:
# - service: media_player.play_media
#   target:
#     entity_id: media_player.doorbell
#   data:
#     media_content_id: media-source://media_source/media/audio.mp3
#     media_content_type: audio/mpeg

script:
  doorbell_not_interested:
    sequence:
      # - service: tts.speak
      #   target:
      #     entity_id: tts.google_en_com
      #   data:
      #     cache: false
      #     media_player_entity_id: media_player.doorbell
      #     message: "Hello. We are not interested. We hope you have a nice day!"
      - service: media_player.play_media
        target:
          entity_id: media_player.doorbell
        data:
          media_content_id: media-source://tts/microsoft?message=Hello.+We+are+not+interested.+We+hope+you+have+a+nice+day!
          media_content_type: provider
          announce: True
