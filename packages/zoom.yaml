automation:
  # - alias: "Zoom State Sensor Update"
  #   mode: queued
  #   trigger:
  #     - platform: webhook
  #       webhook_id: !secret zoom_webhook
  #   action:
  #     - service: setter.set
  #       data:
  #         entity_id: "sensor.andrew_zoom_status"
  #         state: "{{ dict(trigger.json)['payload']['object']['presence_status'] | lower }}"
  #         attributes:
  #           friendly_name: "Andrew Zoom Status"
  #           icon: "mdi:cctv"

  # - alias: "Zoom LED On"
  #   trigger:
  #     - platform: state
  #       entity_id: 
  #         - binary_sensor.in_meeting_weasel
  #         - binary_sensor.in_meeting_work
  #       to:
  #         - "on"
  #   action:
  #     - service: homeassistant.turn_on
  #       entity_id: light.zoom_led
  #       data:
  #         rgb_color: [255,0,0]
  #         brightness: 255
  #         effect: "custom scan"

  - alias: "Zoom LED Off"
    trigger:
      - platform: state
        entity_id: 
          - binary_sensor.in_meeting_weasel
          - binary_sensor.in_meeting_work
        from: "on"
        to: "off"
    action:
      - service: homeassistant.turn_off
        entity_id: light.zoom_led

  - alias: "Zoom LED On"
    trigger:
      - platform: state
        entity_id: binary_sensor.muted_weasel
      - platform: state
        entity_id: binary_sensor.muted_work
      - platform: state
        entity_id: 
          - binary_sensor.in_meeting_weasel
          - binary_sensor.in_meeting_weasel
        from: "off"
        to: "on"
    action:
      - service: homeassistant.turn_on
        entity_id: light.zoom_led
        data:
          rgb_color: >
            {% if ( states("binary_sensor.muted_work") == "on" and states("binary_sensor.in_meeting_work") == "on" ) or ( states("binary_sensor.muted_weasel") == "on" and states("binary_sensor.in_meeting_weasel") == "on" ) %}
            [255,255,0]
            {% elif states("binary_sensor.in_meeting_work") == "on" or states("binary_sensor.in_meeting_weasel") == "on" %}
            [255,0,0]
            {% endif %}
          brightness: 255
          effect: "custom scan"

# sensor:
#   - platform: mqtt
#     state_topic: "sensor/zoom_comms"
#     name: "Zoom Mute State"
#     value_template: "{{ value_json.mute }}"

#   - platform: mqtt
#     state_topic: "sensor/zoom_comms"
#     name: "Zoom Video State"
#     value_template: "{{ value_json.video }}"