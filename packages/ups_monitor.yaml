# UPS monitoring via docker and https://github.com/DanielWinks/pwrstat_docker

sensor:
  - platform : mqtt
    state_topic: "sensor/power/ups"
    name: UPS Monitor
    value_template: '{{ value_json["State"] }}'
    json_attributes:
      - Remaining Runtime
      - Load
      - Power Supply by
      - Last Power Event
      - Test Result
      - Utility Voltage
      - Line Interaction
      - Battery Capacity
  - platform : mqtt
    state_topic: "sensor/power/ups_650"
    name: 650 UPS Monitor
    value_template: '{{ value_json["State"] }}'
    json_attributes:
      - Remaining Runtime
      - Load
      - Power Supply by
      - Last Power Event
      - Test Result
      - Utility Voltage
      - Line Interaction
      - Battery Capacity
  - platform: template
    sensors:
      ups_time_left:
        friendly_name: "UPS Time Remaining"
        value_template: "{{ state_attr('sensor.ups_monitor', 'Remaining Runtime').split(' ')[0] }}"
        unit_of_measurement: 'minutes'
      ups_load:
        friendly_name: "UPS Load"
        value_template: "{{ state_attr('sensor.ups_monitor', 'Load').split(' ')[0] }}"
        unit_of_measurement: 'Watts'
        device_class: "power"
      ups_input_voltage:
        friendly_name: "UPS Utility Voltage"
        value_template: "{{ state_attr('sensor.ups_monitor', 'Utility Voltage').split(' ')[0] }}"
        unit_of_measurement: 'V'
      ups_battery:
        friendly_name: "UPS Capacity"
        value_template: "{{ state_attr('sensor.ups_monitor', 'Battery Capacity').split(' ')[0] }}"
        unit_of_measurement: '%'
        device_class: "battery"
      650_ups_time_left:
        friendly_name: "UPS Time Remaining"
        value_template: "{{ state_attr('sensor.650_ups_monitor', 'Remaining Runtime').split(' ')[0] }}"
        unit_of_measurement: 'minutes'
      650_ups_load:
        friendly_name: "UPS Load"
        value_template: "{{ state_attr('sensor.650_ups_monitor', 'Load').split(' ')[0] }}"
        unit_of_measurement: 'Watts'
        device_class: "power"
      650_ups_input_voltage:
        friendly_name: "UPS Utility Voltage"
        value_template: "{{ state_attr('sensor.650_ups_monitor', 'Utility Voltage').split(' ')[0] }}"
        unit_of_measurement: 'V'
      650_ups_battery:
        friendly_name: "UPS Capacity"
        value_template: "{{ state_attr('sensor.650_ups_monitor', 'Battery Capacity').split(' ')[0] }}"
        unit_of_measurement: '%'
        device_class: "battery"

automation:
  - alias: "UPS Alert"
    trigger:
      platform: state
      entity_id: sensor.ups_monitor
      from: 'Normal'
    action:
      - service: notify.pushover
        data_template:
          message: "UPS {{ trigger.to_state.state }}: {{ now().strftime('%Y-%m-%d %T') }}"

  - alias: "UPS Recovery"
    trigger:
      platform: state
      entity_id: sensor.ups_monitor
      to: 'Normal'
    action:
      - service: notify.pushover
        data_template:
          message: > 
             {% if trigger.from_state.state == "Power Failure" %}
               UPS {{ trigger.to_state.state }}: {{ now().strftime('%Y-%m-%d %T') }}. Outaged lasted {{ relative_time(trigger.from_state.last_changed) }}
             {% else %}
               UPS {{ trigger.to_state.state }}: {{ now().strftime('%Y-%m-%d %T') }}
             {% endif %}

  - alias: "Turn Off NAS After 10 Minute Outage"
    trigger:
      platform: state
      entity_id: sensor.ups_battery
      to: "Power Failure"
      for:
        minutes: 10
    condition:
      condition: state
      entity_id: switch.nas
      state: 'on'
    action:
      - service: notify.pushover
        data_template:
          message: "UPS battery at {{ states('sensor.ups_battery') }}%. Initiaiting NAS shutdown."
      - service: switch.turn_off
        entity_id: switch.nas

  - alias: "Turn Off NUC When 5 Minutes Remain"
    trigger:
      platform: numeric_state
      entity_id: sensor.ups_time_left
      below: 5
    condition:
      - condition: state
        entity_id: sensor.ups_battery
        state: "Power Failure"
    action:
      - service: notify.pushover
        data_template:
          message: "UPS battery at {{ states('sensor.ups_battery') }}%. Issued NUC shutdown 2 minutes from now. Cancel with sudo shutdown -c"
      - service: shell_command.nuc_poweroff

homeassistant:
  customize:
    sensor.ups_time_left:
      icon: mdi:clock-outline
