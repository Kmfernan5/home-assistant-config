sensor:
  - platform: template
    sensors:
      roborock_s4_battery:
        friendly_name: 'Roborock S4 Battery'
        value_template: "{{state_attr('vacuum.roborock_s4', 'battery_level')}}"
        unit_of_measurement: '%'
        device_class: battery

      roborock_s4_lifetime_cleaned_area:
        friendly_name: 'Lifetime Cleaned Area'
        value_template: "{{state_attr('vacuum.roborock_s4', 'total_cleaned_area')}}"
        unit_of_measurement: „é°

      roborock_s4_lifetime_cleaning_time:
        friendly_name: 'Lifetime Cleaning Time'
        value_template: "{{(state_attr('vacuum.roborock_s4', 'total_cleaning_time') / 60)|round(1, 'floor')}}"

      # NOTE: This date is converted to be timezone aware so that it plays nice
      # with some other templating functions and filters.
      roborock_s4_last_cleaned:
        friendly_name: Relative time since last cleaning ended
        value_template: "{{relative_time(strptime(as_timestamp(state_attr('vacuum.roborock_s4', 'clean_stop'))|timestamp_custom('%Y-%m-%d %H:%M:%S%z'), '%Y-%m-%d %H:%M:%S%z'))}}"

      roborock_s4_lifetime_cleaning_count:
        friendly_name: 'Lifetime Cleaning Count'
        value_template: "{{state_attr('vacuum.roborock_s4', 'cleaning_count')}}"

     # Used for the Filter maintenance card
      roborock_s4_filter_remaining:
        friendly_name: '% Filter Remaining'
        unit_of_measurement: '%'
        value_template: "{{((state_attr('vacuum.roborock_s4', 'filter_left') / 150) * 100) | round | int}}"

      # Used for the Filter maintenance card
      roborock_s4_filter_hrs_remaining:
        friendly_name: 'Filter Remaining Hours'
        unit_of_measurement: 'hrs'
        value_template: "{{state_attr('vacuum.roborock_s4', 'filter_left')}}"

      # Used for the Side Brush maintenance card
      roborock_s4_side_brush_remaining:
        friendly_name: '% Side Brush Remaining'
        unit_of_measurement: '%'
        value_template: "{{((state_attr('vacuum.roborock_s4', 'side_brush_left') / 200) * 100) | round | int}}"
  
      # Used for the Side Brush maintenance card
      roborock_s4_side_brush_hrs_remaining:
        friendly_name: 'Side Brush Remaining Hours'
        unit_of_measurement: 'hrs'
        value_template: "{{state_attr('vacuum.roborock_s4', 'side_brush_left')}}"

      # Used for the Main Brush maintenance card
      roborock_s4_main_brush_remaining:
        friendly_name: '% Main Brush Remaining'
        unit_of_measurement: '%'
        value_template: "{{((state_attr('vacuum.roborock_s4', 'main_brush_left') / 300) * 100) | round | int}}"

      # Used for the Main Brush maintenance card
      roborock_s4_main_brush_hrs_remaining:
        friendly_name: 'Main Brush Remaining Hours'
        unit_of_measurement: 'hrs'
        value_template: "{{state_attr('vacuum.roborock_s4', 'main_brush_left')}}"

      # Used for the Sensors maintenance card
      roborock_s4_sensors_remaining:
        friendly_name: '% Sensors Remaining'
        unit_of_measurement: '%'
        value_template: "{{((state_attr('vacuum.roborock_s4', 'sensor_dirty_left') / 30) * 100) | round | int}}"

      # Used for the Sensors maintenance card
      roborock_s4_sensors_hrs_remaining:
        friendly_name: 'Sensors Remaining Hours'
        unit_of_measurement: 'hrs'
        value_template: "{{state_attr('vacuum.roborock_s4', 'sensor_dirty_left')}}"

input_select:
  vacuum_room_select:
    name: Choose a room to clean
    # Define these zones in NodeRed
    options:
      - Office
      - Dining Room
      - Kitchen
      - Living Room
      - Master Bedroom

  vacuum_room_repeat:
    name: Number of times to clean the room
    options:
      - 1
      - 2
      - 3
    initial: 1
    icon: mdi:numeric

script:
  vacuum_park_trashcan:
    sequence:
      - service: xiaomi_miio.vacuum_goto
        data:
          entity_id: vacuum.roborock_s4
          x_coord: 13950
          y_coord: 23250
          
switch:
  platform: template
  switches:
    # Expose vacuum switch to allow manual turn off via Alexa
    vacuum: 
      friendly_name: "Vacuum"
      value_template: '{{ is_state("vacuum.roborock_s4", "on") }}'
      turn_on:
        # Dummy, do nothing
        - delay:
            seconds: 1
      turn_off:
        - service: vacuum.stop
          data:
            entity_id: vacuum.roborock_s4
        - delay:
            seconds: 1
        - service: vacuum.return_to_base
          data:
            entity_id: vacuum.roborock_s4

vacuum:
  - platform: xiaomi_miio
    host: 10.0.1.11
    token: !secret roborock_token
    name: Roborock S4
