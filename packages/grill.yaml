sensor:
  - platform: mqtt
    state_topic: sensor/thermopro
    name: "Thermopro Probe 1"
    unit_of_measurement: '°F'
    value_template: >-
      {% if value_json.temperature_1_F != 608.0 %}
        {{ value_json.temperature_1_F | float | round(2) }}
      {% else %}
        unknown
      {% endif %}

  - platform: mqtt
    state_topic: sensor/thermopro
    name: "Thermopro Probe 2"
    unit_of_measurement: '°F'
    value_template: >-
      {% if value_json.temperature_2_F != 608.0 %}
        {{ value_json.temperature_2_F | float | round(2) }}
      {% else %}
        unknown
      {% endif %}

  - platform: derivative
    source: sensor.thermopro_probe_1
    unit_time: min
    time_window: "00:15:00"

  - platform: derivative
    source: sensor.thermopro_probe_2
    unit_time: min
    time_window: "00:15:00"

  - platform: template
    sensors:
      thermopro_probe_1_high_estimated_length:
        entity_id:
          - sensor.thermopro_probe_1
          - input_number.thermopro_probe_1_set_high
        unit_of_measurement: Minutes
        value_template: "{{ '%.2f'%((states.input_number.thermopro_probe_1_set_high.state|int - states.sensor.thermopro_probe_1.state|int) / states.sensor.sensor_thermopro_probe_1_derivative.state|float) }}"
        attribute_templates:
          timestamp: >-
            {% set time = '%.2f'%((states.input_number.thermopro_probe_1_set_high.state|int - states.sensor.thermopro_probe_1.state|int) / states.sensor.sensor_thermopro_probe_1_derivative.state|float) %}
            {{ (as_timestamp(now()) + time|float*60) | timestamp_local }}
      thermopro_probe_2_high_estimated_length:
        entity_id:
          - sensor.thermopro_probe_2
          - input_number.thermopro_probe_2_set_high
        unit_of_measurement: Minutes
        value_template: "{{ '%.2f'%((states.input_number.thermopro_probe_2_set_high.state|int - states.sensor.thermopro_probe_2.state|int) / states.sensor.sensor_thermopro_probe_2_derivative.state|float) }}"
        attribute_templates:
          timestamp: >-
            {% set time = '%.2f'%((states.input_number.thermopro_probe_2_set_high.state|int - states.sensor.thermopro_probe_2.state|int) / states.sensor.sensor_thermopro_probe_2_derivative.state|float) %}
            {{ (as_timestamp(now()) + time|float*60) | timestamp_local }}

binary_sensor:
  - platform: template
    sensors:
      thermopro_probe_1_in_range:
        value_template: >-
          {{ (states.sensor.thermopro_probe_1.state|float >= states.input_number.thermopro_probe_1_set_low.state|float) and (states.sensor.thermopro_probe_1.state|float <= states.input_number.thermopro_probe_1_set_high.state|float) }}
      thermopro_probe_2_in_range:
        value_template: >-
          {{ (states.sensor.thermopro_probe_2.state|float >= states.input_number.thermopro_probe_2_set_low.state|float) and (states.sensor.thermopro_probe_2.state|float <= states.input_number.thermopro_probe_2_set_high.state|float) }}

input_number:
  thermopro_probe_1_set_low:
    min: -32
    max: 300
    name: Probe 1 Low
    mode: box
    unit_of_measurement: '°F'
  thermopro_probe_2_set_low:
    min: -32
    max: 300
    name: Probe 2 Low
    mode: box
    unit_of_measurement: '°F'
  thermopro_probe_1_set_high:
    min: -32
    max: 300
    name: Probe 1 High
    mode: box
    unit_of_measurement: '°F'
  thermopro_probe_2_set_high:
    min: -32
    max: 300
    name: Probe 2 High
    mode: box
    unit_of_measurement: '°F'

automation:
  - alias: Probe Temperature Alert
    trigger:
      - platform: state
        entity_id: binary_sensor.thermopro_probe_1_in_range
        to: 'off'
      - platform: state
        entity_id: binary_sensor.thermopro_probe_2_in_range
        to: 'off'
    action:
      - service: notify.pushover
        data_template:
          message: |
            {% if trigger.entity_id == "binary_sensor.thermopro_probe_1_in_range" %}
            Probe 1 out of range: {{ states.sensor.thermopro_probe_1.state }}
            Low Set: {{ states.input_number.thermopro_probe_1_set_low.state }}
            High Set: {{ states.input_number.thermopro_probe_1_set_high.state }}
            {% elif trigger.entity_id == "binary_sensor.thermopro_probe_2_in_range" %}
            Probe 2 out of range: {{ states.sensor.thermopro_probe_2.state }}
            Low Set: {{ states.input_number.thermopro_probe_2_set_low.state }}
            High Set: {{ states.input_number.thermopro_probe_2_set_high.state }}
            {% endif %}
          data:
            priority: 2
            expire: 3600
            retry: 30

  - alias: Hopper Level Alert
    trigger:
      - platform: numeric_state
        entity_id: sensor.traeger_hopper_level
        below: 2
    condition:
      condition: template
      value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.hopper_level_alert.attributes.last_triggered) | int > 600 }}'
    action: 
      - service: notify.pushover
        data_template:
          message: "Traeger Hopper level too low!! ({{ states.sensor.traeger_hopper_level.state }}%)"
          data:
            priority: 2
            expire: 3600
            retry: 30
