substitutions:
  name: irrigation
  friendly_name: "Irrigation"

esphome:
  name: ${name}

# python3 -m esptool -p /dev/cu.usbmodem01 write_flash 0x0 /Users/aneisch/Desktop/XXXXXX.bin
esp32:
  board: lolin_s2_mini
  framework:
    type: ESP-IDF  

<<: !include common.yaml

globals:
  - id: current_zone
    type: int
    restore_value: no
    initial_value: '0'

script:
  - id: turn_off_other_zones
    then:
      - delay: 1s
      - lambda: |-
          // Don't let valves turn on if 24v or master is off
          if (!id(master_valve).state || !id(relay_24v_power).state) {
            id(zone1).turn_off();
            id(zone2).turn_off();
            id(zone3).turn_off();
            id(zone4).turn_off();
            id(zone5).turn_off();
          }
          // Implement interlock so only one zone can be active
          else {
            if (id(current_zone) != 1 && id(zone1).state) {
              id(zone1).turn_off();
            }
            else if (id(current_zone) != 2 && id(zone2).state) {
              id(zone2).turn_off();
            }
            else if (id(current_zone) != 3 && id(zone3).state) {
              id(zone3).turn_off();
            }
            else if (id(current_zone) != 4 && id(zone4).state) {
              id(zone4).turn_off();
            }
            else if (id(current_zone) != 5 && id(zone5).state) {
              id(zone5).turn_off();
            }
          }

switch:
  # 24v supply on separate relay to prevent issues with boot spike, etc
  - platform: gpio
    id: relay_24v_power
    name: "${friendly_name} 24v Power"
    restore_mode: ALWAYS_OFF
    icon: mdi:flash
    pin: 12
    on_turn_off:
      then:
        - switch.turn_off: master_valve

  - platform: gpio
    name: "${friendly_name} Front Beds"
    id: zone1
    icon: mdi:sprinkler
    pin: 
      number: 16
      inverted: true
    on_turn_on:
      - globals.set: 
          id: current_zone
          value: '1'
      - script.execute: turn_off_other_zones
      - delay: 25min # Set max time in case of automation failure
      - switch.turn_off: zone1

  - platform: gpio
    name: "${friendly_name} Front Lawn"
    id: zone2
    icon: mdi:sprinkler
    pin:
      number: 18
      inverted: true
    on_turn_on:
      - globals.set: 
          id: current_zone
          value: '2'
      - script.execute: turn_off_other_zones
      - delay: 25min # Set max time in case of automation failure
      - switch.turn_off: zone2

  - platform: gpio
    name: "${friendly_name} Left and Main Rear Lawn"
    id: zone3
    icon: mdi:sprinkler
    pin:
      number: 33
      inverted: true
    on_turn_on:
      - globals.set: 
          id: current_zone
          value: '3'
      - script.execute: turn_off_other_zones
      - delay: 25min # Set max time in case of automation failure
      - switch.turn_off: zone3

  - platform: gpio
    name: "${friendly_name} Front and Right Rear Lawn"
    id: zone4
    icon: mdi:sprinkler
    pin:
      number: 35
      inverted: true
    on_turn_on:
      - globals.set: 
          id: current_zone
          value: '4'
      - script.execute: turn_off_other_zones
      - delay: 25min # Set max time in case of automation failure
      - switch.turn_off: zone4

  - platform: gpio
    name: "${friendly_name} Side Lawn"
    id: zone5
    icon: mdi:sprinkler
    pin:
      number: 37
      inverted: true
    on_turn_on:
      - globals.set: 
          id: current_zone
          value: '5'
      - script.execute: turn_off_other_zones
      - delay: 25min # Set max time in case of automation failure
      - switch.turn_off: zone5

  - platform: gpio
    name: "${friendly_name} Master Valve"
    id: master_valve
    icon: mdi:valve
    pin:
      number: 39
      inverted: true
    on_turn_on:
      then:
        if:
          condition:
            - switch.is_off: relay_24v_power
          then:
            - delay: 1s
            - switch.turn_off: master_valve
    on_turn_off:
      then:
        - script.execute: turn_off_other_zones