AutoAdjust:
  module: ac_automation
  class: AutoAdjust
  constrain_input_boolean: input_boolean.ac_automation
  thermostats: climate.thermostat
  device_tracker: group.trackers
  door_trigger: binary_sensor.front_door
  morning_adjust_weekday: '09:00:00'
  morning_adjust_weekend: '11:00:00'
  night_adjust_weekday: '01:00:00'
  night_adjust_weekend: '01:00:00'
  # Below depends on the manual setting of heat or cool on the thermostat
  cool_day: '80'
  cool_night: '72'
  cool_unoccupied: '82'
  heat_day: '65'
  heat_night: '62'
  heat_unoccupied: '60'

Zigbee Remote:
  module: zigbee_remote
  class: ZigbeeRemote
  device_ieee: cc:cc:cc:ff:fe:d9:03:f7
  button_1_toggle: light.master_bedroom_lamps
  button_2_toggle: switch.master_bedroom_ceiling_fan
  button_2_hold_toggle: switch.master_bedroom_ceiling_fan
  button_3_toggle: switch.master_bedroom_ceiling_fan

Minimote Morning:
  module: minimote
  class: MiniMote
  constrain_start_time: "05:00:00"
  constrain_end_time: "08:00:00"
  node_id: 11
  # Panic is is an optional mode controlled by input boolean
  # when panic mode is on, all buttons will trigger the panic_entity
  # this should probably be a script
  panic_mode_boolean: input_boolean.panic_mode
  panic_entity: script.panic
  # Toggle = short press
  # On = long press
  scene_1_toggle: switch.master_bedroom_ceiling_fan
  scene_2_on: switch.master_bedroom_ceiling_fan
  scene_3_toggle: switch.master_bedroom_ceiling_fan
  scene_4_on: switch.master_bedroom_ceiling_fan
  scene_5_toggle: switch.master_bedroom_ceiling_fan
  scene_6_on: switch.master_bedroom_ceiling_fan
  scene_7_toggle: switch.master_bedroom_ceiling_fan
  scene_8_on: switch.master_bedroom_ceiling_fan

Minimote Non-Morning:
  module: minimote
  class: MiniMote
  constrain_start_time: "08:00:00"
  constrain_end_time: "05:00:00"
  node_id: 11
  # Panic is is an optional mode controlled by input boolean
  # when panic mode is on, all buttons will trigger the panic_entity
  # this should probably be a script
  panic_mode_boolean: input_boolean.panic_mode
  panic_entity: script.panic
  # Toggle = short press
  # On = long press
  scene_1_toggle: light.master_bedroom_ceiling_fan
  scene_2_on: script.master_bedroom_light_full
  scene_3_toggle: switch.master_bedroom_ceiling_fan
  scene_4_on: script.master_bedroom_light_dim
  scene_5_toggle: switch.master_bedroom_sound_machine
  scene_6_on: script.master_bedroom_bedtime
  scene_7_toggle: light.master_bedroom_lamps
  scene_8_on: script.appdaemon_ac_night

Occupancy Simulator:
  module: occusim
  class: OccuSim
  constrain_input_boolean: input_boolean.occusim
  dump_times: '1'
  log_msg: '1'
  reset_time: 00:00:00
  step_evening_name: Evening
  step_evening_start: sunset - 00:45:00
  step_night_name: Night
  step_night_start: '23:59:59'

  # Turn on some devices in the evening
  step_evening_on_1: light.master_bedroom_lamps
  step_evening_on_2: light.kitchen_table_light
  step_evening_on_3: light.andrew_desk_lamp
  step_evening_on_4: light.office_ceiling_fan

  #random_master_name: Master
  #random_master_start: Evening
  #random_master_end: Night
  #random_master_maxduration: 02:00:00
  #random_master_minduration: 00:30:00
  #random_master_number: '2'
  #random_master_on_1: light.master_bedroom_lamps
  #random_master_off_1: light.master_bedroom_lamps

  # Randomly turn dining room light on and off a few times
  random_dining_name: Dining Room
  random_dining_start: Evening
  random_dining_end: Night
  random_dining_maxduration: 01:00:00
  random_dining_minduration: 00:10:00
  random_dining_number: '3'
  random_dining_on_1: light.dining_room_light
  random_dining_off_1: light.dining_room_light

  #random_living_name: Living Room
  #random_living_start: Evening
  #random_living_end: Night
  #random_living_maxduration: 02:00:00
  #random_living_minduration: 00:30:00
  #random_living_number: '5'
  #random_living_on_1: light.living_room_lamps
  #random_living_off_1: light.living_room_lamps
  #random_living_on_2: light.living_room_can_lights
  #random_living_off_2: light.living_room_can_lights

  #random_office_name: Office
  #random_office_start: Evening
  #random_office_end: Night
  #random_office_maxduration: 02:00:00
  #random_office_minduration: 00:30:00
  #random_office_number: '2'
  #random_office_on_1: light.andrew_desk_lamp
  #random_office_off_1: light.andrew_desk_lamp

  # Ensure all off late
  step_off_name: Off
  step_off_start: '00:15:00'
  step_off_stop: '00:30:00'
  step_off_off_1: light.master_bedroom_lamps
  step_off_off_2: light.dining_room_light
  step_off_off_3: light.kitchen_table_light
  step_off_off_5: light.andrew_desk_lamp
  step_off_off_6: light.office_ceiling_fan

Front Porch Lights:
  module: entity_timer
  class: Timer
  devices: light.front_porch_lights,switch.front_sconces
  time_on: sunset
  time_off: "23:00:00"

Inside Lights:
  module: entity_timer
  class: Timer
  constrain_input_boolean: input_boolean.house_lamps_automation
  devices: light.entryway_light,light.living_room_sconces
  time_on: sunset
  time_off: "23:00:00"

Front House Lights:
  module: entity_timer
  class: Timer
  devices: switch.front_sconces
  time_off: "22:00:00"

Christmas Lights:
  module: entity_timer
  class: Timer
  devices: switch.christmas_lights
  time_on: sunset
  time_off: "23:00:00"

############
# Aquarium #
############
CO2 On Morning:
  module: entity_timer
  class: Timer
  constrain_input_boolean: input_boolean.aquarium_automation
  devices: switch.aquarium_co2
  time_on: "08:00:00"

Aquarium All Light On Morning:
  module: entity_timer
  class: Timer
  constrain_input_boolean: input_boolean.aquarium_automation
  devices: switch.aquarium_light,light.aquarium_white_light
  time_on: "10:00:00"

Aquarium White Light Afternoon:
  module: entity_timer
  class: Timer
  constrain_input_boolean: input_boolean.aquarium_automation
  devices: light.aquarium_white_light
  time_off: "13:00:00"
  time_on: "14:30:00"

CO2 Off Evening:
  module: entity_timer
  class: Timer
  constrain_input_boolean: input_boolean.aquarium_automation
  devices: switch.aquarium_co2
  time_off: "16:30:00"

Aquarium All Light Off Evening:
  module: entity_timer
  class: Timer
  constrain_input_boolean: input_boolean.aquarium_automation
  devices: light.aquarium_white_light,switch.aquarium_light
  time_off: "17:30:00"

NAS:
  module: entity_timer
  class: Timer
  devices: switch.nas
  time_on: '03:00:00'
  # There is an automation to turn this off automatically after rsync
  time_off: '05:00:00'
  constrain_days: wed

Andrew Vehicle:
  module: countdown_notify
  class: Notify
  countdown_entity: sensor.andrew_vehicle_registration
  notification_days: 7,0,-7,-14 # A mandatory list of when to notify, can be 1 or more value, eg: 1,2,7,30
  notify_overdue: False # An optional argument, if true we will continue to notify after 0
  notify: pushover # The name of the notify service
  message: "It's time to renew Andrew's vehicle registration!"

Bethany Vehicle:
  module: countdown_notify
  class: Notify
  countdown_entity: sensor.bethany_vehicle_registration
  notification_days: 7,0,-7,-14 # A mandatory list of when to notify, can be 1 or more value, eg: 1,2,7,30
  notify_overdue: False # An optional argument, if true we will continue to notify after 0
  notify: pushover # The name of the notify service
  message: "It's time to renew Bethany's vehicle registration!"

Office Light at Night With Door:
  module: door_open
  class: DoorLight
  constrain_input_boolean: input_boolean.house_lamps_automation
  constrain_end_time: sunrise
  constrain_start_time: sunset
  door_sensor: binary_sensor.front_door
  lights: light.andrew_desk_lamp
  # Seconds to turn entity on when triggered
  time_on: '30'

Kitchen Light at Night With Door:
  module: door_open
  class: DoorLight
  constrain_input_boolean: input_boolean.house_lamps_automation
  constrain_end_time: sunrise
  constrain_start_time: sunset
  door_sensor: binary_sensor.garage_interior_door
  lights: light.kitchen_table_leds
  # Seconds to turn entity on when triggered
  time_on: '30'

Sleepy Time Lamp Automation Override:
  # Stop master bedroom lamps from automatic when napping
  module: follow_me
  class: Follow
  leader: switch.master_bedroom_ceiling_fan
  follower: input_boolean.house_lamps_automation
  invert: True

House Lamp Automation Sunset:
  module: light_automation
  class: DeviceOn
  constrain_input_boolean: input_boolean.house_lamps_automation
  constrain_presence: anyone
  time_on: sunset - 00:45:00
  entity: light.andrew_desk_lamp,light.bethany_desk_lamp,light.living_room_lamps,light.master_bedroom_lamps,switch.under_cabinet_lights

Living Room Lamp Follow:
  module: follow_me
  class: Follow
  constrain_input_boolean: input_boolean.house_lamps_automation
  leader: light.master_bedroom_lamps
  follower: light.living_room_lamps

Guest Lamp Follow Master:
  module: follow_me
  class: Follow
  constrain_input_boolean: input_boolean.guest_mode,off
  leader: light.master_bedroom_lamps
  follower: light.guest_nightstand_lamp

Door Notification and Occusim Security Follow:
  module: follow_me
  class: Follow
  leader: input_boolean.security_status
  follower: input_boolean.door_notify,input_boolean.occusim

# Algo Timer:
#  module: algo_timer
#  class: SmartTimer
#  db_location: /opt/homeassistant/home-assistant_v2.db
#  entity_id: switch.bathroom_light_switch
#  debug: True

Timer:
 module: timer
 class: Timer
 timer_entity: sensor.kitchen_next_timer
 # what entity will hold the countdown state?
 countdown_destination_entity: sensor.kitchen_timer_countdown
 # Publish to MQTT (remove mqtt entry if you don't want..)
 mqtt: True
