version: '3.2'
services:
    homeassistant:
        container_name: hass
        #image: homeassistant/home-assistant:0.114.4
        image: homeassistant/home-assistant:stable
        labels:
          com.centurylinklabs.watchtower.enable: "false"
        volumes:
          - /opt/homeassistant:/config
          - /var/run/docker.sock:/var/run/docker.sock
          - /home/aneisch/symlinks_for_rsync/hass-docker-ssh:/root/.ssh:ro
          - /tmp/radar.gif:/tmp/radar.gif
          - /sys/class/hwmon/hwmon1/temp1_input:/sys/class/thermal/thermal_zone0/temp:ro
        devices:
            #- /dev/zwave
            - /dev/zigbee
        environment:
          - TZ=America/Chicago
        healthcheck:
          test: "curl -m 30 -sLf http://localhost:8123 || pkill -9 python3"
          interval: 60s
          timeout: 15s
          retries: 2
        network_mode: host
        restart: always
        logging:
          driver: none
    mariadb:
        container_name: mariadb
        image: 'mariadb:latest'
        user: '99'
        environment:
          - TZ=America/Chicago
        ports:
          - '3306:3306'
        volumes:
          - /opt/mariadb:/var/lib/mysql
        environment:
          - MYSQL_ROOT_PASSWORD=PASSWORD
          - MYSQL_USER=homeassistant
          - MYSQL_PASSWORD=homeassistant
          - MYSQL_DATABASE=homeassistant
        restart: always
    mosquitto:
        container_name: mosquitto
        image: eclipse-mosquitto
        user: '99'
        healthcheck:
            test: "mosquitto_sub -E -t '#'"
            interval: 60s
            timeout: 10s
            retries: 5
        volumes:
            - '/etc/ssl/certs:/mosquitto/certs:ro'
            - '/opt/mosquitto/config:/mosquitto/config:ro'
            - '/opt/mosquitto/log:/mosquitto/log'
            - '/opt/mosquitto/data:/mosquitto/data'
        ports:
            - '1883:1883'
        restart: always
    influxdb:
        container_name: influxdb
        image: influxdb
        user: '99'
        healthcheck:
          test: "curl -sf http://localhost:8086/ping"
          interval: 60s
          timeout: 10s
          retries: 5
        volumes:
            - '/opt/influxdb:/var/lib/influxdb'
            - '/opt/influxdb/conf:/etc/influxdb'
        ports:
            - '8086:8086'
        restart: always
    nodered:
        container_name: nodered
        image: nodered/node-red:latest
        user: '99'
        volumes:
          - /opt/nodered:/data
          - /etc/localtime:/etc/localtime:ro
        ports:
          - "1880:1880"
        environment:
          - TZ=America/Chicago
        restart: always
    appdaemon:
        container_name: appdaemon
        image: acockburn/appdaemon:dev
        #user: '99'
        healthcheck:
          test: "curl -sf http://localhost:8888"
          interval: 60s
          timeout: 10s
          retries: 5
        volumes:
          - /etc/localtime:/etc/localtime:ro
          - /opt/appdaemon:/conf
          # Mount directory of appdaemon apps installed by HACS
          - /opt/homeassistant/appdaemon/apps:/conf/apps/hacs
        ports:
            - '8888:8888'
        restart: always
    #apcupsd_950:
    #    container_name: apcupsd_950
    #    image: gersilex/apcupsd
    #    ports:
    #        - '3551:3551'
    #    volumes:
    #        - /opt/apcupsd/apcupsd.conf:/etc/apcupsd/apcupsd.conf
    #    devices:
    #        - '/dev/ups_monitor_950:/dev/usb/hiddev0'
    #    restart: always
    apcupsd_650:
        container_name: apcupsd_650
        image: gersilex/apcupsd
        ports:
            - '3552:3551'
        volumes:
            - /opt/apcupsd/apcupsd.conf:/etc/apcupsd/apcupsd.conf
        devices:
            - '/dev/ups_monitor_650:/dev/usb/hiddev0'
        restart: always
    thermostat_api_server:
        container_name: thermostat_api_server
        image: aneisch/thermostat_api_server
        labels:
          com.centurylinklabs.watchtower.enable: "false"
        ports:
            - '8080:8080'
        environment:
            - THERMOSTAT_SERIAL=THERMOSTAT_SERIAL
            - MQTT_SERVER=10.0.1.22
        depends_on:
          - mosquitto
        healthcheck:
          test: "curl -sLf http://localhost:8080/time"
          interval: 60s
          timeout: 5s
          retries: 3
        restart: always
    #openzwave:
    #    image: openzwave/ozwdaemon:allinone-latest
    #    container_name: openzwave
    #    devices:
    #        - "/dev/zwave:/dev/zwave"
    #    volumes:
    #        - /opt/ozw:/opt/ozw/config
    #    #security_opt:
    #    #    - seccomp:unconfined
    #    ports:
    #        # Web VNC
    #        - "7800:7800"
    #        # API
    #        - "1983:1983"
    #    environment:
    #        TZ: "America/Chicago"
    #        MQTT_SERVER: "10.0.1.22"
    #        USB_PATH: "/dev/zwave"
    #        OZW_NETWORK_KEY: "0x48, 0xA8, 0x80, 0x12, 0x30, 0xB0, 0x44, 0xDD, 0x60, 0xD3, 0xA1, 0x46, 0x59, 0xE3, 0x75, 0x7F"
    #    restart: 'no'
    zwavejs:
        container_name: zwavejs
        image: zwavejs/zwavejs2mqtt:latest
        restart: always
        stop_signal: SIGINT
        devices:
            - '/dev/zwave:/dev/zwave'
        volumes:
            - /opt/zwavejs:/usr/src/app/store
        ports:
            - '8091:8091' # port for web interface
            - '3001:3000' # port for zwave-js websocket server
