version: '3.2'
services:
    homeassistant:
        container_name: hass
        image: ghcr.io/home-assistant/home-assistant:stable
        labels:
          com.centurylinklabs.watchtower.monitor-only: "true"
        volumes:
          - /opt/homeassistant:/config
          - /opt/nginx-proxy-manager/database.sqlite:/tmp/database.sqlite
          - /var/run/docker.sock:/var/run/docker.sock
          - /home/aneisch/symlinks_for_rsync/hass-docker-ssh:/root/.ssh:ro
          - /tmp/radar.gif:/tmp/radar.gif
          - /sys/class/hwmon/hwmon1/temp1_input:/sys/class/thermal/thermal_zone0/temp:ro
          - /etc/localtime:/etc/localtime:ro
        devices:
            - /dev/zigbee
        environment:
          - TZ=America/Chicago
        healthcheck:
          test: 'curl -m 90 -sLf http://localhost:8123 || date >> /config/healthcheck' #| pkill -9 python3'
          interval: 90s
          timeout: 60s
          retries: 2
        network_mode: host
        restart: always
        logging:
          driver: none
    mariadb:
        container_name: mariadb
        image: 'mariadb:latest'
        user: '99'
        environment:
          - TZ=America/Chicago
        ports:
          - '127.0.0.1:3306:3306'
        volumes:
          - /opt/mariadb:/var/lib/mysql
        environment:
          - MYSQL_ROOT_PASSWORD=PASSWORD
          - MYSQL_USER=homeassistant
          - MYSQL_PASSWORD=homeassistant
          - MYSQL_DATABASE=homeassistant
        restart: always
    mosquitto:
        container_name: mosquitto
        #image: eclipse-mosquitto:1.6
        image: eclipse-mosquitto:latest
        user: '99'
        healthcheck:
            test: "mosquitto_sub -E -t '#'"
            interval: 60s
            timeout: 10s
            retries: 5
        volumes:
            - '/opt/mosquitto/config:/mosquitto/config:ro'
            - '/opt/mosquitto/log:/mosquitto/log'
            - '/opt/mosquitto/data:/mosquitto/data'
        ports:
            - '1883:1883'
        restart: always
    influxdb:
        container_name: influxdb
        #image: influxdb
        image: influxdb:1.8.4-alpine
        user: '99'
        #healthcheck:
        #  test: "curl -sf http://localhost:8086/ping"
        #  interval: 60s
        #  timeout: 10s
        #  retries: 5
        volumes:
            - '/opt/influxdb:/var/lib/influxdb'
            - '/opt/influxdb/conf:/etc/influxdb'
        ports:
            - '8086:8086'
        restart: always
    nodered:
        container_name: nodered
        image: nodered/node-red:latest
        user: '99'
        volumes:
          - /opt/nodered:/data
          - /etc/localtime:/etc/localtime:ro
        ports:
          - "1880:1880"
        environment:
          - TZ=America/Chicago
        restart: always
    appdaemon:
        container_name: appdaemon
        #image: acockburn/appdaemon:4.0.5
        image: acockburn/appdaemon:latest
        #user: '99'
        healthcheck:
          test: "curl -sf http://localhost:8888"
          interval: 60s
          timeout: 10s
          retries: 5
        volumes:
          - /etc/localtime:/etc/localtime:ro
          - /opt/appdaemon:/conf
          # Mount directory of appdaemon apps installed by HACS
          - /opt/homeassistant/appdaemon/apps:/conf/apps/hacs
          #- /home/aneisch/dockerStart.sh:/usr/src/app/dockerStart.sh:ro
        ports:
            - '8888:8888'
        restart: always
    #apcupsd_950:
    #    container_name: apcupsd_950
    #    image: gersilex/apcupsd
    #    ports:
    #        - '3551:3551'
    #    volumes:
    #        - /opt/apcupsd/apcupsd.conf:/etc/apcupsd/apcupsd.conf
    #    devices:
    #        - '/dev/ups_monitor_950:/dev/usb/hiddev0'
    #    restart: always
    #apcupsd_650:
    #    container_name: apcupsd_650
    #    image: gersilex/apcupsd
    #    ports:
    #        - '3552:3551'
    #    volumes:
    #        - /opt/apcupsd/apcupsd.conf:/etc/apcupsd/apcupsd.conf
    #    devices:
    #        - '/dev/ups_monitor_650:/dev/usb/hiddev0'
    #    restart: always
    thermostat_api_server:
        container_name: thermostat_api_server
        image: ghcr.io/aneisch/thermostat_api_server:latest
        volumes:
          - /etc/localtime:/etc/localtime:ro
        ports:
            - '8080:8080'
        environment:
            - THERMOSTAT_SERIAL=THERMOSTAT_SERIAL
            - MQTT_SERVER=10.0.1.22
        depends_on:
          - mosquitto
        restart: always
    zwavejs:
        container_name: zwavejs
        image: zwavejs/zwavejs2mqtt:latest
        #image: zwavejs/zwavejs2mqtt:sha-0a723f9 # 2.4.1
        restart: always
        #labels:
        #  com.centurylinklabs.watchtower.monitor-only: "true"
        stop_signal: SIGINT
        devices:
            - '/dev/zwave:/dev/zwave'
        volumes:
            - /opt/zwavejs:/usr/src/app/store
        ports:
            - '8091:8091' # port for web interface
            - '127.0.0.1:3000:3000' # port for zwave-js websocket server
    #zigbee2mqtt:
    #    container_name: zigbee2mqtt
    #    image: koenkk/zigbee2mqtt
    #    restart: unless-stopped
    #    ports:
    #        - '8880:8080'
    #    volumes:
    #        - /opt/zigbee2mqtt:/app/data
    #        - /run/udev:/run/udev:ro
    #    environment:
    #        - TZ=America/Chicago
    #    devices:
    #        - /dev/sonoff_zigbee:/dev/sonoff_zigbee
